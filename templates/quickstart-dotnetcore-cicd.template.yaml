AWSTemplateFormatVersion: '2010-09-09'
Description: This Quick Start deploys CodeBuild, CodePipeline and CodeDeploy for .NET Core (qs-1r1rte3gi)
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Parameters for deploying the CI/CD pipeline"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: GitHub configuration
        Parameters:
          - GitHubRepositoryName
          - GitHubBranchName
          - GitHubOwner
          - GitHubOAuthToken
      - Label:
          default: AWS Elastic Beanstalk configuration
        Parameters:
          - SolutionStack
      - Label:
          default: AWS CodeBuild configuration
        Parameters:
          - CodeBuildImage
    ParameterLabels:
      GitHubRepositoryName:
        default: GitHub repository name
      GitHubBranchName:
        default: GitHub branch name
      GitHubOwner:
        default: GitHub owner user name
      GitHubOAuthToken:
        default: GitHub OAuth token
      SolutionStack:
        default: Elastic Beanstalk platform version
      CodeBuildImage:
        default: CodeBuild image version
Parameters:
  GitHubRepositoryName:
    Type: String
    Description: Name of the GitHub repository that hosts the web application.
    Default: quickstart-dotnetcore-cicd
  GitHubBranchName:
    Type: String
    Description: Name of the GitHub branch that the CI/CD pipeline will pull from.
    Default: 'main'
  GitHubOwner:
    Type: String
    Description: User name for accessing the GitHub repository.
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    Description: OAuth token for accessing the GitHub repository.
  SolutionStack:
    Type: String
    Description: Platform version to use for the .NET Core Elastic Beanstalk environment. Enter the latest version. To find the latest version, go to https://docs.aws.amazon.com/elasticbeanstalk/latest/platforms/platforms-supported.html#platforms-supported.dotnetlinux.
    Default: '64bit Amazon Linux 2 v2.1.5 running .NET Core' 
  CodeBuildImage:
    Type: String
    Description: Docker image version to use for CodeBuild. Enter the latest version. To find the latest version, go to https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html.
    Default: 'aws/codebuild/amazonlinux2-x86_64-standard:3.0'
Resources:
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Source:
        Type: CODEPIPELINE
        InsecureSsl: false
      Artifacts:
        Type: CODEPIPELINE
        Packaging: NONE
        EncryptionDisabled: false
      Cache:
        Type: NO_CACHE
      Environment:
        Type: LINUX_CONTAINER
        Image: !Ref CodeBuildImage
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: false
        ImagePullCredentialsType: "CODEBUILD"
      ServiceRole:   !GetAtt 
        - CodeBuildServiceRole
        - Arn
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
        S3Logs:
          Status: DISABLED
  CodePipelineArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
  AppPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    DependsOn: 
      - CodePipelineServiceRole
    Properties:
      RoleArn:  !GetAtt 
        - CodePipelineServiceRole
        - Arn
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              RunOrder: 1
              Configuration:
                Branch: !Ref GitHubBranchName
                OAuthToken: !Ref GitHubOAuthToken
                Owner: !Ref GitHubOwner
                PollForSourceChanges: false
                Repo: !Ref GitHubRepositoryName
              OutputArtifacts:
                - Name: SourceArtifact      
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              RunOrder: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              OutputArtifacts:
                - Name: BuildArtifact
              InputArtifacts:
                - Name: SourceArtifact
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ElasticBeanstalk
                Version: 1
              RunOrder: 1
              Configuration:
                ApplicationName: !Ref ElasticBeanstalkApplication
                EnvironmentName: !Ref ElasticBeanstalkEnvironment
              InputArtifacts:
                - Name: BuildArtifact
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub AWS-CodePipeline-Service-${AWS::StackName}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'iam:PassRole'
                Resource: '*'
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    'iam:PassedToService':
                      - cloudformation.amazonaws.com
                      - elasticbeanstalk.amazonaws.com
                      - ec2.amazonaws.com
                      - ecs-tasks.amazonaws.com
              - Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplication'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'elasticbeanstalk:*'
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'opsworks:CreateDeployment'
                  - 'opsworks:DescribeApps'
                  - 'opsworks:DescribeCommands'
                  - 'opsworks:DescribeDeployments'
                  - 'opsworks:DescribeInstances'
                  - 'opsworks:DescribeStacks'
                  - 'opsworks:UpdateApp'
                  - 'opsworks:UpdateStack'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'cloudformation:ValidateTemplate'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
                Effect: Allow
              - Effect: Allow
                Action:
                  - 'devicefarm:ListProjects'
                  - 'devicefarm:ListDevicePools'
                  - 'devicefarm:GetRun'
                  - 'devicefarm:GetUpload'
                  - 'devicefarm:CreateUpload'
                  - 'devicefarm:ScheduleRun'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'servicecatalog:ListProvisioningArtifacts'
                  - 'servicecatalog:CreateProvisioningArtifact'
                  - 'servicecatalog:DescribeProvisioningArtifact'
                  - 'servicecatalog:DeleteProvisioningArtifact'
                  - 'servicecatalog:UpdateProduct'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'cloudformation:ValidateTemplate'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ecr:DescribeImages'
                Resource: '*'
  CodeBuildServiceRole:
        Type: 'AWS::IAM::Role'
        Properties:
          AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - codebuild.amazonaws.com
                Action: 'sts:AssumeRole'
          Path: /
          Policies:
            - PolicyName: !Sub AWS-CodeBuild-Service-${AWS::StackName}
              PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Resource: '*'
                      Action:
                      - 'logs:CreateLogGroup'
                      - 'logs:CreateLogStream'
                      - 'logs:PutLogEvents'
                    - Effect: Allow
                      Resource:  !Sub arn:aws:s3:::${AWS::StackName}-codepipelineartifactstore*
                      Action:
                      - 's3:PutObject'
                      - 's3:GetObject'
                      - 's3:GetObjectVersion'
                      - 's3:GetBucketAcl'
                      - 's3:GetBucketLocation'
  EBInstanceProfileRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier            
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
  EBInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles: 
        - !Ref EBInstanceProfileRole
  ElasticBeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: AWS Elastic Beanstalk Sample Application
  ElasticBeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    DependsOn: ElasticBeanstalkApplication
    Properties: 
      ApplicationName: !Ref ElasticBeanstalkApplication
      Description: "AWS Elastic Beanstalk Environment running .NET Core Application"
      SolutionStackName: !Ref SolutionStack
      OptionSettings:
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: IamInstanceProfile
          Value: !Ref EBInstanceProfile
Outputs:
  CodePipelineName:
    Description: CodePipeline  Name
    Value: !Ref AppPipeline
